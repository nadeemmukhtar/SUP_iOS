//
//  SelectedQuestionCard.swift
//  sup
//
//  Created by Justin Spraggins on 6/28/20.
//  Copyright Â© 2020 Episode 8, Inc. All rights reserved.
//

import SwiftUI

struct SelectedQuestionCard: View {
    @ObservedObject var state: AppState
    @Binding var animateCard: Bool
    @State var cardState = CGSize.zero
    @State var showDelete = false
    var onClose: (() -> Void)? = nil
    var onDelete: (() -> Void)? = nil
<<<<<<< Updated upstream
    let cardHeight: CGFloat = 320
    var cardOpen = screenHeight / 2 - 320 / 2 + (isIPhoneX ? 30 : 45)
=======
    let cardHeight: CGFloat = 270
    var cardOpen = screenHeight / 2 - 270 / 2 + (isIPhoneX ? 30 : 45)
    @State var selectedQuestion = Question(id: "", title: "", isFeatured: false)
>>>>>>> Stashed changes

    var body: some View {
        ZStack {
            Color.black.opacity(0.5)
                .frame(width: screenWidth, height: screenHeight + 50)
                .opacity(animateCard ? 1 : 0)
                .animation(.easeInOut(duration: 0.7))
                .onTapGesture {self.onClose?()}

            VStack (spacing: 10) {
                ZStack {
                    Capsule().frame(width: 30, height: 8)
                        .foregroundColor(Color.white.opacity(0.5))
                }
                .onTapGesture { self.onClose?() }

                Text("these questions will show up in your next sup to ask your guest")
                    .modifier(TextModifier(size: 19, font: Font.textaBold, color: Color.white.opacity(0.7)))
                    .frame(height: 44)
                    .multilineTextAlignment(.center)
                    .lineSpacing(0)
                    .frame(width: screenWidth - 70)
                    .padding(.top, 10)
                Spacer().frame(height: 20)

                SelectedQuestions(questions: $state.questions,
                                  isCall: .constant(false),
                                  delete: { question in
                                    self.showDelete = true
                                    self.selectedQuestion = question
                })
                    .actionSheet(isPresented: $showDelete) {
                        ActionSheet(
                            title: Text(""),
                            message: Text("Are you sure you want to delete this question for your next sup?"),
                            buttons: [.destructive(Text("Delete")) {
                                self.removeQuestion()
                                self.onDelete?()
                                }, .cancel()]
                        )
                }
                Spacer()
            }
            .padding(.top, 12)
              .frame(width: screenWidth, height: cardHeight)
              .background(
                BackgroundBlurView(style: .systemUltraThinMaterialDark)
                    .frame(width: screenWidth, height: cardHeight)
                    .cornerRadius(radius: isIPhoneX ? 30 : 18, corners: [.topLeft, .topRight])
              )
                  .offset(y: animateCard ? cardOpen : screenHeight)
                  .animation(Animation.interpolatingSpring(mass: 1, stiffness: 100, damping: 16, initialVelocity: 0).speed(0.9))
                  .offset(y: self.cardState.height)
                  .gesture(
                      DragGesture()
                          .onChanged { value in
                              self.cardState = value.translation
                              if self.cardState.height < -5 {
                                  self.cardState = CGSize.zero
                              }
                      }
                      .onEnded { value in
                          if self.cardState.height > 10 {
                              self.self.onClose?()
                              self.cardState = CGSize.zero
                          } else {
                              self.cardState = CGSize(width: 0, height: 0)
                          }
                  })
        }
        .frame(width: screenWidth, height: screenHeight)
        .edgesIgnoringSafeArea(.bottom)
    }
    
    private func removeQuestion() {
        self.state.questions.removeAll(where: { $0.id == self.selectedQuestion.id })
    }
}
